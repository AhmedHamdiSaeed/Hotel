// <auto-generated />
using System;
using Hotel_DAL.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel_DAL.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20240615175634_q3")]
    partial class q3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel_DAL.Data.Model.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("NumOfRooms")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<DateOnly>("checkInDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("checkOutDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.BookingRoom", b =>
                {
                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumOfChildren")
                        .HasColumnType("int");

                    b.HasKey("RoomID", "BookingId");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingRooms");
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ism"
                        },
                        new
                        {
                            Id = 2,
                            Name = "cairo"
                        });
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("MaxAdults")
                        .HasColumnType("int");

                    b.Property<int>("MaxChildren")
                        .HasColumnType("int");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            MaxAdults = 1,
                            MaxChildren = 2,
                            RoomType = "Single"
                        },
                        new
                        {
                            ID = 2,
                            MaxAdults = 2,
                            MaxChildren = 3,
                            RoomType = "Double"
                        },
                        new
                        {
                            ID = 3,
                            MaxAdults = 3,
                            MaxChildren = 5,
                            RoomType = "Suite"
                        });
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ahmed",
                            NationalID = "123423",
                            PhoneNumber = "01092925652"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ali",
                            NationalID = "34543",
                            PhoneNumber = "010929343"
                        });
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BranchID = 1,
                            CategoryID = 1
                        },
                        new
                        {
                            ID = 2,
                            BranchID = 1,
                            CategoryID = 1
                        },
                        new
                        {
                            ID = 3,
                            BranchID = 2,
                            CategoryID = 2
                        },
                        new
                        {
                            ID = 4,
                            BranchID = 1,
                            CategoryID = 1
                        },
                        new
                        {
                            ID = 5,
                            BranchID = 2,
                            CategoryID = 3
                        },
                        new
                        {
                            ID = 6,
                            BranchID = 2,
                            CategoryID = 2
                        },
                        new
                        {
                            ID = 7,
                            BranchID = 1,
                            CategoryID = 3
                        });
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.Booking", b =>
                {
                    b.HasOne("Hotel_DAL.Data.Model.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_DAL.Data.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.BookingRoom", b =>
                {
                    b.HasOne("Hotel_DAL.Data.Model.Booking", "Booking")
                        .WithMany("BookingRooms")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_DAL.Data.Model.Room", "Room")
                        .WithMany("BookingRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.Room", b =>
                {
                    b.HasOne("Hotel_DAL.Data.Model.Branch", "Branch")
                        .WithMany("Rooms")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hotel_DAL.Data.Model.Category", "Category")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.Booking", b =>
                {
                    b.Navigation("BookingRooms");
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.Branch", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.Category", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Hotel_DAL.Data.Model.Room", b =>
                {
                    b.Navigation("BookingRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
